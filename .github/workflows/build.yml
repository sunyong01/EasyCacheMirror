name: Build and Test

on:
  push:
    branches: [ master, dev ]
    tags:
      - 'v*'  # 匹配所有以v开头的tag，如 v1.0.0
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        go-version: [1.22.x]

    steps:
      - uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # 设置 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false

      # 设置 pnpm 缓存
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 设置 Go 环境
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: go.sum

      # 构建前端
      - name: Build Frontend
        working-directory: ui
        run: |
          pnpm install
          pnpm build
          cd ..
          cp -r ui/dist .

      # 构建后端
      - name: Build Backend
        run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o easyCacheMirror

      # 运行测试
      - name: Run Tests
        run: go test -v ./...

      # 打包构建产物（所有分支）
      - name: Package Artifacts
        run: |
          mkdir -p release
          cp easyCacheMirror release/
          cp -r dist release/
          cp Dockerfile release/
          cp docker-compose.yml release/
          cd release
          zip -r ../easycachemirror.zip *

      # 上传构建产物（所有分支和tag）
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: easycachemirror-${{ github.ref_name }}
          path: easycachemirror.zip
          retention-days: 5

      # 创建 Release（仅 tag）
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: easycachemirror.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}